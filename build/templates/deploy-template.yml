apiVersion: v1
kind: Template
parameters:
- description: The name of the service
  displayName: Name
  name: NAME
  required: true
- description: The original name of the service
  displayName: Original Name
  name: ORIGINAL_NAME
  required: true
- description: Tag of the docker image
  displayName: Name
  name: TAG
  value: dev
- description: Namespace
  displayName: Namespace
  name: NAMESPACE
  required: true
- description: Docker registry
  displayName: Docker registry
  name: DOCKER_REGISTRY
  required: true
- description: BitBucket project
  displayName: BB_PROJECT
  name: BB_PROJECT
  value:
- description: BitBucket repo
  displayName: BB_REPO
  name: BB_REPO
  value:
- description: BitBucket pull request
  displayName: BB_PR
  name: BB_PR
  value:
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}
      labels:
        app: ${NAME}
        mxts.service: ${ORIGINAL_NAME}
        br-project: ${BB_PROJECT}
        br-repo: ${BB_REPO}
        br-pr: ${BB_PR}
        br-ticketnumber: ${TAG}
    spec:
      replicas: 1
      strategy:
          type: Rolling
          rollingParams:
            updatePeriodSeconds: 1
            intervalSeconds: 1
            timeoutSeconds: 600
            maxUnavailable: 25%
            maxSurge: 25%
          resources: {}
          activeDeadlineSeconds: 21600
      selector:
        app: ${NAME}
        mxts.service: ${ORIGINAL_NAME}
        br-project: ${BB_PROJECT}
        br-repo: ${BB_REPO}
        br-pr: ${BB_PR}
        br-ticketnumber: ${TAG}
      triggers:
          - type: ConfigChange
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
                - ${NAME}
              from:
                kind: ImageStreamTag
                namespace: ${NAMESPACE}
                name: '${ORIGINAL_NAME}:${TAG}'
      template:
        metadata:
          labels:
            app: ${NAME}
            mxts.service: ${ORIGINAL_NAME}
            br-project: ${BB_PROJECT}
            br-repo: ${BB_REPO}
            br-pr: ${BB_PR}
            br-ticketnumber: ${TAG}
        spec:
          containers:
            - env:
              - name: SCRAPER_JENKINS_URL
                value: 'https://jenkins-mxts.maxxton.com'
              - name: SCRAPER_JENKINS_TOKEN
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: jenkins-api
              - name: SCRAPER_JENKINS_USERNAME
                valueFrom:
                  secretKeyRef:
                    key: username
                    name: jenkins-apiname: ${NAME}
              image: >-
                ${DOCKER_REGISTRY}/${NAMESPACE}/${ORIGINAL_NAME}:${TAG}
              ports:
                - containerPort: 8080
                  protocol: TCP
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: IfNotPresent
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 0.1
                  memory: 100Mi
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}

